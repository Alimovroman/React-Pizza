{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  searchValue: '',\n  pizzaCategory: 0,\n  sort: {\n    sortNumber: 0,\n    sortParam: ['rating', 'rating&order=desc', 'price', 'price&order=desc', 'name', 'name&order=desc']\n  },\n  pageNumber: 1\n};\nexport const mainReducer = createSlice({\n  name: 'main',\n  initialState,\n  reducers: {\n    setSearchValue: (state, action) => {\n      console.log(action.payload);\n      state.searchValue = action.payload;\n    },\n    changeCategory: (state, action) => {\n      state.pizzaCategory = action.payload;\n    },\n    changeParamSort: (state, action) => {\n      state.sort.sortNumber = action.payload;\n    },\n    setPageNumber: (state, action) => {\n      state.pageNumber = action.payload;\n    },\n    changeQueryParam: (state, action) => {\n      state.pageNumber = Number(action.payload.pageNumber);\n      state.pizzaCategory = Number(action.payload.pizzaCategory);\n      state.sort.sortNumber = Number(action.payload.sortNumber);\n    }\n  }\n});\nexport const sortSelector = state => state.main.sort;\nexport const mainSelector = state => state.main;\nexport const searchValueSelector = state => state.main.searchValue;\nexport const {\n  changeCategory,\n  changeParamSort,\n  setPageNumber,\n  changeQueryParam,\n  setSearchValue\n} = mainReducer.actions;\nexport default mainReducer.reducer; // const pizzaBlockReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case CHANGE_CATEGORY:\n//       return {\n//         ...state,\n//         category: action.category\n//       }\n//     default:\n//       return state;\n//   }\n// };\n//export const changeCategory = (category) => ({type: CHANGE_CATEGORY, category});\n//export default pizzaBlockReducer;","map":{"version":3,"names":["createSlice","initialState","searchValue","pizzaCategory","sort","sortNumber","sortParam","pageNumber","mainReducer","name","reducers","setSearchValue","state","action","console","log","payload","changeCategory","changeParamSort","setPageNumber","changeQueryParam","Number","sortSelector","main","mainSelector","searchValueSelector","actions","reducer"],"sources":["C:/Users/Ramon/Documents/Stydieng_the_React/React-Pizza/react-pizza/src/state/main-reducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  searchValue: '',\r\n  pizzaCategory: 0,\r\n  sort: {\r\n    sortNumber: 0,\r\n    sortParam: ['rating', 'rating&order=desc', 'price', 'price&order=desc', 'name', 'name&order=desc']\r\n  },\r\n  pageNumber: 1\r\n}\r\n\r\nexport const mainReducer = createSlice({\r\n  name: 'main',\r\n  initialState,\r\n  reducers: {\r\n    setSearchValue: (state, action) => {\r\n      console.log(action.payload)\r\n      state.searchValue = action.payload\r\n    },\r\n    changeCategory: (state, action) => {\r\n      state.pizzaCategory = action.payload\r\n    },\r\n    changeParamSort: (state, action) => {\r\n      state.sort.sortNumber = action.payload\r\n    },\r\n    setPageNumber: (state, action) => {\r\n      state.pageNumber = action.payload\r\n    },\r\n    changeQueryParam: (state, action) => {\r\n      state.pageNumber = Number(action.payload.pageNumber);\r\n      state.pizzaCategory = Number(action.payload.pizzaCategory);\r\n      state.sort.sortNumber = Number(action.payload.sortNumber);\r\n    }\r\n  }\r\n});\r\n\r\nexport const sortSelector = (state) => state.main.sort;\r\nexport const mainSelector = (state) => state.main;\r\nexport const searchValueSelector = state => state.main.searchValue;\r\n\r\nexport const {changeCategory, changeParamSort, setPageNumber, changeQueryParam, setSearchValue} = mainReducer.actions;\r\nexport default mainReducer.reducer\r\n\r\n// const pizzaBlockReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case CHANGE_CATEGORY:\r\n//       return {\r\n//         ...state,\r\n//         category: action.category\r\n//       }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n//export const changeCategory = (category) => ({type: CHANGE_CATEGORY, category});\r\n\r\n\r\n\r\n//export default pizzaBlockReducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EADM;EAEnBC,aAAa,EAAE,CAFI;EAGnBC,IAAI,EAAE;IACJC,UAAU,EAAE,CADR;IAEJC,SAAS,EAAE,CAAC,QAAD,EAAW,mBAAX,EAAgC,OAAhC,EAAyC,kBAAzC,EAA6D,MAA7D,EAAqE,iBAArE;EAFP,CAHa;EAOnBC,UAAU,EAAE;AAPO,CAArB;AAUA,OAAO,MAAMC,WAAW,GAAGR,WAAW,CAAC;EACrCS,IAAI,EAAE,MAD+B;EAErCR,YAFqC;EAGrCS,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjCC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;MACAJ,KAAK,CAACV,WAAN,GAAoBW,MAAM,CAACG,OAA3B;IACD,CAJO;IAKRC,cAAc,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACG,OAA7B;IACD,CAPO;IAQRE,eAAe,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;MAClCD,KAAK,CAACR,IAAN,CAAWC,UAAX,GAAwBQ,MAAM,CAACG,OAA/B;IACD,CAVO;IAWRG,aAAa,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;MAChCD,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACG,OAA1B;IACD,CAbO;IAcRI,gBAAgB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MACnCD,KAAK,CAACL,UAAN,GAAmBc,MAAM,CAACR,MAAM,CAACG,OAAP,CAAeT,UAAhB,CAAzB;MACAK,KAAK,CAACT,aAAN,GAAsBkB,MAAM,CAACR,MAAM,CAACG,OAAP,CAAeb,aAAhB,CAA5B;MACAS,KAAK,CAACR,IAAN,CAAWC,UAAX,GAAwBgB,MAAM,CAACR,MAAM,CAACG,OAAP,CAAeX,UAAhB,CAA9B;IACD;EAlBO;AAH2B,CAAD,CAA/B;AAyBP,OAAO,MAAMiB,YAAY,GAAIV,KAAD,IAAWA,KAAK,CAACW,IAAN,CAAWnB,IAA3C;AACP,OAAO,MAAMoB,YAAY,GAAIZ,KAAD,IAAWA,KAAK,CAACW,IAAtC;AACP,OAAO,MAAME,mBAAmB,GAAGb,KAAK,IAAIA,KAAK,CAACW,IAAN,CAAWrB,WAAhD;AAEP,OAAO,MAAM;EAACe,cAAD;EAAiBC,eAAjB;EAAkCC,aAAlC;EAAiDC,gBAAjD;EAAmET;AAAnE,IAAqFH,WAAW,CAACkB,OAAvG;AACP,eAAelB,WAAW,CAACmB,OAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA"},"metadata":{},"sourceType":"module"}